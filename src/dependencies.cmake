set(DEPENDENCIES ${Binaries})
set(LOADED_DEPENDENCIES)

list(LENGTH DEPENDENCIES N)

while(${N} GREATER 0)

	list(GET DEPENDENCIES 0 DEPENDENCY)
	list(REMOVE_AT DEPENDENCIES 0)

	list(FIND LOADED_DEPENDENCIES ${DEPENDENCY} N)

	if(${N} EQUAL -1)

		if(EXISTS "${SRC_DIR}/${DEPENDENCY}")

			add_subdirectory("${SRC_DIR}/${DEPENDENCY}" "${DEPENDENCY}")

			target_include_directories(${DEPENDENCY} PUBLIC "${SRC_DIR}/${DEPENDENCY}")

			set_target_properties(${DEPENDENCY} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${OUTPUT_DIR}")

			list(TRANSFORM PUBLIC_MODULE_HEADERS PREPEND  "${SRC_DIR}/${DEPENDENCY}/")

			install(FILES ${PUBLIC_MODULE_HEADERS} DESTINATION include/${DEPENDENCY})

			install(TARGETS ${DEPENDENCY} ARCHIVE DESTINATION lib/${DEPENDENCY})

			list(APPEND DEPENDENCIES ${MODULE_DEPENDENCIES})

		else()

			message("Error: folder ${SRC_DIR}/${DEPENDENCY} doesn't exist!")

		endif()

		list(APPEND LOADED_DEPENDENCIES ${DEPENDENCY})

	endif()

	list(LENGTH DEPENDENCIES N)

endwhile()
